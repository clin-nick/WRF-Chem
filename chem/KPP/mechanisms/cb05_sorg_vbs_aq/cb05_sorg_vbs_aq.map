! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! 
! Map File with Human-Readable Information
! 
! Generated by KPP-2.1 symbolic chemistry Kinetics PreProcessor
!       (http://www.cs.vt.edu/~asandu/Software/KPP)
! KPP is distributed under GPL, the general public licence
!       (http://www.gnu.org/copyleft/gpl.html)
! (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
! (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
!     With important contributions from:
!        M. Damian, Villanova University, USA
!        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
! 
! File                 : cb05_sorg_vbs_aq.map
! Time                 : Tue Apr 12 23:42:43 2022
! Working directory    : /network/rit/lab/lulab/chinan/WRF/WRFV4.0/WRF/chem/KPP/mechanisms/cb05_sorg_vbs_aq
! Equation file        : cb05_sorg_vbs_aq.kpp
! Output root filename : cb05_sorg_vbs_aq
! 
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



### Options -------------------------------------------

FUNCTION - AGGREGATE
JACOBIAN - SPARSE W/ ACCOUNT FOR LU DECOMPOSITION FILL-IN
DOUBLE   - ON
REORDER  - ON

### Parameters ----------------------------------------

! NSPEC - Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 107 
! NVAR - Number of Variable species
  INTEGER, PARAMETER :: NVAR = 105 
! NVARACT - Number of Active species
  INTEGER, PARAMETER :: NVARACT = 73 
! NFIX - Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 2 
! NREACT - Number of reactions
  INTEGER, PARAMETER :: NREACT = 198 
! NVARST - Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
! NFIXST - Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 106 

### Species -------------------------------------------

Variable species
  1 = tolaer1 (n) 37 = pah (r)    73 = clo (r)   
  2 = tolaer2 (n) 38 = hg2 (n)    74 = mgly (r)  
  3 = cslaer (n) 39 = CVASOA1 (n) 75 = fmcl (r)  
  4 = xylaer1 (n) 40 = CVASOA2 (r) 76 = mepx (r)  
  5 = xylaer2 (n) 41 = CVASOA3 (r) 77 = hno3 (r)  
  6 = isoaer1 (n) 42 = CVASOA4 (r) 78 = co (r)    
  7 = isoaer2 (n) 43 = CVBSOA1 (n) 79 = open (r)  
  8 = sulf (n)   44 = CVBSOA2 (r) 80 = ror (r)   
  9 = sulaer (n) 45 = CVBSOA3 (r) 81 = eth (r)   
 10 = terpaer (n) 46 = CVBSOA4 (r) 82 = cres (r)  
 11 = humaer (n) 47 = cl2 (r)    83 = terp (r)  
 12 = hum (r)    48 = so2 (r)    84 = iole (r)  
 13 = limaer1 (n) 49 = pan (r)    85 = ole (r)   
 14 = limaer2 (n) 50 = hocl (r)   86 = xo2n (r)  
 15 = lim (r)    51 = tol (r)    87 = par (r)   
 16 = ociaer1 (n) 52 = h2 (r)     88 = isop (r)  
 17 = ociaer2 (n) 53 = o1d (r)    89 = ispd (r)  
 18 = oci (r)    54 = n2o5 (r)   90 = aldx (r)  
 19 = apinaer1 (n) 55 = xyl (r)    91 = ald2 (r)  
 20 = apinaer2 (n) 56 = ch4 (r)    92 = form (r)  
 21 = apinaer3 (n) 57 = hg0 (r)    93 = ntr (r)   
 22 = apinaer4 (n) 58 = hono (r)   94 = o3 (r)    
 23 = apin (r)   59 = facd (r)   95 = no3 (r)   
 24 = bpinaer1 (n) 60 = to2 (r)    96 = xo2 (r)   
 25 = bpinaer2 (n) 61 = pacd (r)   97 = c2o3 (r)  
 26 = bpinaer3 (n) 62 = aacd (r)   98 = oh (r)    
 27 = bpinaer4 (n) 63 = panx (r)   99 = no (r)    
 28 = bpinaer5 (n) 64 = pna (r)   100 = cl (r)    
 29 = bpin (r)   65 = etha (r)  101 = o (r)     
 30 = teraer1 (n) 66 = meoh (r)  102 = ho2 (r)   
 31 = teraer2 (n) 67 = etoh (r)  103 = cxo3 (r)  
 32 = ter (r)    68 = h2o2 (r)  104 = meo2 (r)  
 33 = alkhaer1 (n) 69 = hco3 (r)  105 = no2 (r)   
 34 = alkh (r)   70 = hcl (r)   
 35 = pahaer1 (n) 71 = cro (r)   
 36 = pahaer2 (n) 72 = rooh (r)  

Fixed species
  1 = H2O (r)     2 = M (r)     

### Subroutines ---------------------------------------

SUBROUTINE cb05_sorg_vbs_aq_Fun ( V, F, RCT, Vdot )
SUBROUTINE cb05_sorg_vbs_aq_IRRFun ( V, F, RCT, IRR )
SUBROUTINE cb05_sorg_vbs_aq_Jac_SP ( V, F, RCT, JVS )
SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )
SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )
SUBROUTINE cb05_sorg_vbs_aq_KppSolve ( JVS, X )
SUBROUTINE KppSolveTR ( JVS, X, XX )
SUBROUTINE Initialize ( )
SUBROUTINE Shuffle_user2kpp ( V_USER, V )
SUBROUTINE Shuffle_kpp2user ( V, V_USER )
SUBROUTINE Update_RCONST ( )
SUBROUTINE Update_PHOTO ( )
SUBROUTINE GetMass ( CL, Mass )
